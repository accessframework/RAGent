,input,acp,output
0,Update a Schedule,0,{decision: allow; subject: update; action: update; resource: schedule; condition: none; purpose: none}
1,The courses a student has selected for the current semester.,0,{decision: allow; subject: none; action: select; resource: courses a student has selected for the current semester; condition: none; purpose: none}
2,"If the use case was successful, the professor information is added, updated, or deleted from the system.",1,{decision: allow; subject: none; action: add; resource: professor information; purpose: none; condition: use case was successful | decision: allow; subject: none; action: update; resource: professor information; purpose: none; condition: use case was successful | decision: allow; subject: none; action: delete; resource: professor information; purpose: none; condition: use case was successful}
3,This use case starts when the actor wishes to log into the Course Registration System.,0,{decision: allow; subject: none; action: log; resource: course registration system; condition: none; purpose: none}
4,"The Registrar can then enter a different id number or cancel the operation, at which point the use case ends.",1,{decision: allow; subject: registrar; action: enter; resource: id number; purpose: none; condition: none | decision: allow; subject: registrar; action: cancel; resource: operation; purpose: none; condition: none}
5,A person enrolled in classes at the university.,0,{decision: allow; subject: person; action: enroll; resource: classes at the university; condition: none; purpose: none}
6,Register for Courses,0,{decision: allow; subject: registrar; action: register; resource: courses; condition: none; purpose: none}
7,"Information about each course, such as professor, department, and prerequisites, will be included to help students make informed decisions.",0,{decision: allow; subject: none; action: include; resource: professor; purpose: help students make informed decisions; condition: none | decision: allow; subject: none; action: include; resource: department; purpose: help students make informed decisions; condition: none | decision: allow; subject: none; action: include; resource: prerequisites; purpose: help students make informed decisions; condition: none}
8,Save a Schedule,0,{decision: allow; subject: none; action: save; resource: schedule; condition: none; purpose: none}
9,"When the use case starts, if it is determined that registration for the current semester has been closed, a message is displayed to the Professor, and the use case terminates.",1,{decision: allow; subject: none; action: display; resource: message; purpose: none; condition: it is determined that registration for the current semester has been closed | decision: allow; subject: none; action: terminate; resource: use case; purpose: none; condition: it is determined that registration for the current semester has been closed}
10,The Registrar makes the desired changes to the student information.,1,{decision: allow; subject: registrar; action: change; resource: student information; purpose: none; condition: none}
11,The system is in the login state and has the login screen displayed.,0,{decision: allow; subject: system; action: display; resource: login screen; condition: none; purpose: none}
12,The system retrieves a list of all students who were registered for the course offering.,1,{decision: allow; subject: system; action: retrieve; resource: list of all students; purpose: none; condition: none}
13,"The system verifies that the selected offerings do not conflict (i.e., have the same dates and times) with each other or any course offerings that the professor has previously signed up to teach.",1,{decision: allow; subject: system; action: verify; resource: selected offering; purpose: none; condition: none}
14,The system will also indicate which are the conflicting courses.,1,{decision: allow; subject: system; action: indicate; resource: conflicting course; purpose: none; condition: none}
15,The Student also selects any course offerings to delete from the existing schedule.,1,{decision: allow; subject: student; action: select; resource: course offering; purpose: delete from the existing schedule; condition: none}
16,The system retrieves and displays the grade information for each of the course offerings the Student completed during the previous semester.,1,{decision: allow; subject: system; action: retrieve; resource: grade information; purpose: none; condition: none | decision: allow; subject: system; action: display; resource: grade information; purpose: none; condition: none}
17,"If, in the Update a Student  or Delete a Student  sub-flows, a student with the specified id number does not exist, the system displays an error message.",1,{decision: allow; subject: system; action: display; resource: error message; purpose: none; condition: in the update a student  or delete a student  sub-flows_ a student with the specified id number does not exist}
18,The system then adds the Student to the selected course offering.,1,{decision: allow; subject: system; action: add; resource: student; purpose: none; condition: none}
19,"If the use case was successful, the course offerings a Professor is scheduled to teach have been updated.",0,{decision: allow; subject: none; action: update; resource: course offerings a professor is scheduled to teach; purpose: none; condition: use case was successful}
20,"The Student acknowledges the error, and the Basic Flow is re- started at the beginning.",1,{decision: allow; subject: student; action: acknowledge; resource: error; purpose: none; condition: none | decision: allow; subject: none; action: re-start; resource: basic flow; purpose: none; condition: none}
21,"At the end of the semester, the student will be able to access the system to view an electronic report card.",1,{decision: allow; subject: student; action: access; resource: system; purpose: view an electronic report card; condition: none}
22,This use case describes how a user logs into the Course Registration System.,0,{decision: allow; subject: user; action: log; resource: course registration system; condition: none; purpose: none}
23,Course offerings that do not have enough students are cancelled.,0,{decision: allow; subject: none; action: cancel; resource: course offerings that do not have enough students; condition: none; purpose: none}
24,Professors will be able to access the system to sign up to teach courses as well as record grades.,1,{decision: allow; subject: professor; action: access; resource: system; purpose: sign up to teach courses; condition: none | decision: allow; subject: professor; action: access; resource: system; purpose: record grades; condition: none}
25,The system deletes the student from the system.,1,{decision: allow; subject: system; action: delete; resource: student; purpose: none; condition: none}
26,"The Student acknowledges the error message, and the use case terminates.",1,{decision: allow; subject: student; action: acknowledge; resource: error message; purpose: none; condition: none | decision: allow; subject: none; action: terminate; resource: use case; purpose: none; condition: none}
27,"If the Student selected “Delete a Schedule”, the Delete a Schedule subflow is executed.",0,{decision: allow; subject: none; action: execute; resource: delete a schedule subflow; purpose: none; condition: student selected “delete a schedule”}
28,"The system shall support up to 2000 simultaneous users against the central database at any given time, and up to 500 simultaneous users against the local servers at any one time.",0,{decision: allow; subject: system; action: support; resource: up to 2000 simultaneous users against the central database; condition: none; purpose: none}
29,"If the Student selected “Create a Schedule”, the Create  a Schedule subflow is executed.",0,{decision: allow; subject: none; action: execute; resource: create a schedule subflow; purpose: none; condition: student selected “create a schedule”}
30,This use case allows a Student to register for course offerings in the current semester.,1,{decision: allow; subject: student; action: register; resource: course offering; purpose: none; condition: none}
31,This Supplementary Specification lists the requirements that are not readily captured in the use cases of the use- case model.,0,{decision: allow; subject: none; action: list; resource: requirements; condition: none; purpose: none}
32,"If the schedule contains “enrolled in” course offerings, the Student must be removed from the course offering.",1,{decision: allow; subject: none; action: remove; resource: student; purpose: none; condition: schedule contains “enrolled in” course offerings}
33,Only the Registrar is allowed to change any student information.,1,{decision: allow; subject: registrar; action: change; resource: any student information; purpose: none; condition: none}
34,"If, in the Submit Schedule sub-flow, the system determines that the Student has not satisfied the necessary prerequisites, or that the selected course offering is full, or that there are schedule conflicts, an error message is displayed.",1,{decision: allow; subject: none; action: display; resource: error message; purpose: none; condition: in the submit schedule sub-flow the system determines that the student has not satisfied the necessary prerequisites or that the selected course offering is full or that there are schedule conflicts}
35,"If the Registrar selected “Delete a Student”, the Delete a Student  subflow is executed.",0,{decision: allow; subject: none; action: execute; resource: delete a student  subflow; purpose: none; condition: registrar selected “delete a student”}
36,The registrar’s office will continue to maintain course information through another system.,0,{decision: allow; subject: registrar; action: maintain; resource: course information; condition: none; purpose: none}
37,"Often, this document can be used as an informal data dictionary, capturing data definitions so that use-case descriptions and other project documents can focus on what the system must do with the information.",0,{decision: allow; subject: none; action: use; resource: document; condition: capturing data definitions so that use - case descriptions and other project documents can focus on what the system must do with the information; purpose: none}
38,The actor enters his or her name and password.,1,{decision: allow; subject: actor; action: enter; resource: password; condition: none; purpose: none | decision: allow; subject: actor; action: enter; resource: name; condition: none; purpose: none}
39,The Registrar makes the desired changes to the professor information.,1,{decision: allow; subject: registrar; action: change; resource: professor information; purpose: none; condition: none}
40,Note: Risk-based prototypes have found that the legacy course catalog database cannot meet our performance needs without some creative use of mid-tier processing power,0,{decision: allow; subject: risk-based; action: find; resource: legacy course catalog database; condition: none; purpose: none}
41,The college will keep the existing course catalog database where all course information is maintained.,0,{decision: allow; subject: college; action: keep; resource: existing course database; condition: none; purpose: none}
42,Includes the days of the week and times it is offered.,0,{decision: allow; subject: none; action: include; resource: times of the week; condition: none; purpose: none | decision: allow; subject: none; action: include; resource: days of the week; condition: none; purpose: none}
43,The Submit Schedule subflow is executed.,0,{decision: allow; subject: none; action: execute; resource: submit schedule subflow; condition: none; purpose: none}
44,"For each student on the list, the Professor enters a grade: A, B, C, D, F, or I.  The system records the student’s grade for the course offering.",1,{decision: allow; subject: professor; action: enter; resource: grade; purpose: none; condition: none | decision: allow; subject: system; action: record; resource: grade; purpose: none; condition: none}
45,The Student verifies the deletion.,1,{decision: allow; subject: student; action: verify; resource: deletion; purpose: none; condition: none}
46,(The functional requirements are defined in the Use Case Specifications.),0,{decision: allow; subject: none; action: define; resource: functional requirements; condition: none; purpose: none}
47,"If a course offering becomes full while a student is building a schedule including that offering, the student must be notified.",1,{decision: allow; subject: none; action: notify; resource: student; purpose: none; condition: course offering becomes full while a student is building a schedule including that offering}
48,All the professors teaching at the university.,0,{decision: allow; subject: professors teaching at the university; action: teach; resource: professors teaching at the university; condition: none; purpose: none}
49,"If, in the Update a Schedule or Delete a Schedule sub-flows, the system is unable to retrieve the Student’s schedule, an error message is displayed.",1,{decision: allow; subject: none; action: display; resource: error message; purpose: none; condition: in the update a schedule or delete a schedule sub-flows the system is unable to retrieve the student’s schedule}
50,"The history of the grades for all courses, for a particular student sent to the finance system, which in turn bills the students.",0,{decision: allow; subject: none; action: bill; resource: students; condition: in turn; purpose: none}
51,"If, in the Basic Flow, the actor enters an invalid name possibly and possibly password, the system displays an error message.",1,{decision: allow; subject: system; action: display; resource: error message; condition: if in the basic flow the actor enters an invalid name possibly and possibly password; purpose: none}
52,A specific delivery of the course for a specific semester – you could run the same course in parallel sessions in the semester.,0,{decision: allow; subject: specific delivery; action: run; resource: same course in parallel sessions in the semester; condition: none; purpose: none}
53,"If this occurs, the Submit Schedule step is replaced with the following:",0,{decision: allow; subject: none; action: replace; resource: submit schedule step; condition: if this occurs; purpose: none}
54,"If the Registrar selected “update a professor”, the Update a Professor  subflow is executed.",0,{decision: allow; subject: none; action: execute; resource: update a professor subflow; purpose: none; condition: registrar selected “update a professor”}
55,"This use case starts when the Registrar wishes to add, change, possibly and possibly delete student information in the system.",1,{decision: allow; subject: registrar; action: add; resource: student; purpose: none; condition: none | decision: allow; subject: registrar; action: change; resource: student; purpose: none; condition: none | decision: allow; subject: registrar; action: delete; resource: student; purpose: none; condition: none}
56,The Registrar verifies the deletion.,1,{decision: allow; subject: registrar; action: verify; resource: deletion; purpose: none; condition: none}
57,This database is an Ingres relational database running on a DEC VAX.,0,{decision: allow; subject: none; action: run; resource: database; condition: none; purpose: none}
58,Students cannot register for course offerings after registration for the current semester has been closed.,1,{decision: deny; subject: student; action: register; resource: course offering; purpose: none; condition: registration for the current semester has been closed}
59,Submit  Schedule,0,{decision: allow; subject: none; action: submit; resource: schedule; condition: none; purpose: none}
60,Professors cannot change the course offerings they teach after registration for the current semester has been closed.,1,{decision: deny; subject: professor; action: change; resource: course offering; purpose: none; condition: registration for the current semester has been closed}
61,The system retrieves and displays the professor information.,1,{decision: allow; subject: system; action: retrieve; resource: professor information; purpose: none; condition: none | decision: allow; subject: system; action: display; resource: professor information; purpose: none; condition: none}
62,The Select Offerings subflow is executed.,0,{decision: allow; subject: none; action: execute; resource: select offers; condition: none; purpose: none}
63,The professor is added to the system.,1,{decision: allow; subject: none; action: add; resource: professor; purpose: none; condition: none}
64,This use case allows a Professor to submit student grades for one or more classes completed in the previous semester.,1,{decision: allow; subject: professor; action: submit; resource: grade; purpose: none; condition: none}
65,"The system retrieves and displays the Student’s current schedule (e.g., the schedule for the current semester).",1,{decision: allow; subject: system; action: retrieve; resource: schedule; purpose: none; condition: none | decision: allow; subject: system; action: display; resource: schedule; purpose: none; condition: none}
66,"Since student grades are sensitive information, the system must employ extra security measures to prevent unauthorized access.",0,{decision: allow; subject: system; action: employ; resource: extra security measures; condition: none; purpose: none}
67,"If the use case was successful, student grades for a course offering are updated.",1,{decision: allow; subject: none; action: update; resource: student grades; purpose: none; condition: use case was successful}
68,"Once the Registrar updates the necessary information, the system updates the student information.",1,{decision: allow; subject: system; action: update; resource: student information; purpose: none; condition: registrar updates the necessary information}
69,This use case starts when the Registrar requests that the system close registration.,0,{decision: allow; subject: none; action: start; resource: use case; purpose: none; condition: registrar requests that the system close registration}
70,The first available alternate course offerings will be selected.,0,{decision: allow; subject: none; action: select; resource: first available alternate course offerings; purpose: none; condition: none}
71,"The Professor acknowledges the message, and the use case ends.",0,{decision: allow; subject: professor; action: acknowledge; resource: message; condition: none; purpose: none}
72,The system prompts the Registrar to confirm the deletion of the student.,1,{decision: allow; subject: registrar; action: confirm; resource: deletion; purpose: none; condition: none}
73,"Once the student has made his or her selections, the system creates a schedule for the Student containing the selected course offerings.",1,{decision: allow; subject: system; action: create; resource: schedule; purpose: none; condition: student has made his or her selections}
74,"If the use case was successful, the student schedule is created, updated, or deleted.",1,{decision: allow; subject: none; action: create; resource: student schedule; purpose: none; condition: use case was successful | decision: allow; subject: none; action: update; resource: student schedule; purpose: none; condition: use case was successful | decision: allow; subject: none; action: delete; resource: student schedule; purpose: none; condition: use case was successful}
75,A person teaching classes at the university.,0,{decision: allow; subject: person teaching classes at the university; action: teach; resource: students; condition: none; purpose: none}
76,The system requests that the Registrar enter the professor information.,1,{decision: allow; subject: registrar; action: enter; resource: professor information; purpose: none; condition: none}
77,Course offerings will have a maximum of ten students and a minimum of three students.,0,{decision: allow; subject: none; action: have; resource: course offerings; condition: none; purpose: none}
78,"The system requests that the Registrar specify the function he or she would like to perform (either Add a Student, Update a Student, or Delete a Student)",1,{decision: allow; subject: registrar; action: add; resource: student; purpose: none; condition: none | decision: allow; subject: registrar; action: update; resource: student; purpose: none; condition: none | decision: allow; subject: registrar; action: delete; resource: student; purpose: none; condition: none}
79,"The Billing System will send the bill to the students, which will include a copy of their final schedule.",1,{decision: allow; subject: billing system; action: send; resource: bill; purpose: none; condition: none}
80,"If the systems find a schedule conflict when trying to establish the course offerings the Professor should take, the system will display an error message indicating that a schedule conflict has occurred.",1,{decision: allow; subject: system; action: display; resource: error message; purpose: none; condition: systems find a schedule conflict when trying to establish the course offerings the professor should take}
81,"Once the Student acknowledges the message, the use case terminates.",0,{decision: allow; subject: none; action: terminate; resource: use case; purpose: none; condition: student acknowledges the message}
82,This use case allows a Registrar to close the registration process.,1,{decision: allow; subject: registrar; action: close; resource: registration process; purpose: none; condition: none}
83,The system requests that the Registrar enter the student id.,1,{decision: allow; subject: registrar; action: enter; resource: student id; purpose: none; condition: none}
84,Maintain Professor Information,0,{decision: allow; subject: maintain professor information; action: maintain; resource: professor information; condition: none; purpose: none}
85,"The system must prevent students from changing any schedules other than their own, and professors from modifying assigned course offerings for other professors.",1,{decision: deny; subject: student; action: change; resource: other schedule; purpose: none; condition: none | decision: allow; subject: students; action: change; resource: schedule; purpose: none; condition: none | decision: deny; subject: professors; action: modify; resource: course offering; purpose: none; condition: none}
86,"If, in the Delete A Student  sub-flow, the Registrar decides not to delete the student, the delete is cancelled and the Basic Flow is re-started at the beginning.",1,{decision: allow; subject: none; action: re-start; resource: basic flow; purpose: none; condition: in the delete a student  sub-flow the registrar decides not to delete the student | decision: allow; subject: none; action: cancel; resource: the delete; purpose: none; condition: in the delete a student  sub-flow the registrar decides not to delete the student}
87,"If not, the system state remains unchanged.",0,{decision: allow; subject: system; action: remain; resource: system state; condition: if not; purpose: none}
88,"The actor can choose to either return to the beginning of the Basic Flow or cancel the login, at which point the use case ends.",0,{decision: allow; subject: actor; action: return; resource: beginning of the basic flow; condition: none; purpose: none | decision: allow; subject: actor; action: cancel; resource: use case; condition: none; purpose: none}
89,The Professor may also change the grade for a student by entering a new grade.,1,{decision: allow; subject: professor; action: change; resource: grade; purpose: none; condition: none}
90,"If, in the Basic Flow, the Professor did not teach any course offerings in the previous semester, the system will display an error message.",1,{decision: allow; subject: system; action: display; resource: error message; purpose: none; condition: in the basic flow_ the professor did not teach any course offerings in the previous semester}
91,The Student may update the course selections on the current selection by deleting and adding new course offerings.,1,{decision: allow; subject: student; action: update; resource: course selections; purpose: none; condition: none}
92,"For each semester, there is a period of time that students can change their schedule.",1,{decision: allow; subject: student; action: change; resource: schedule; purpose: none; condition: none}
93,"Once the registration process is completed for a student, the registration system sends information to the billing system so the student can be billed for the semester.",1,{decision: allow; subject: registration system; action: send; resource: information; purpose: student can be billed for the semester; condition: registration process is completed for a student}
94,This includes:,0,{decision: allow; subject: none; action: include; resource: objects; condition: none; purpose: none}
95,"If, in the Basic Flow, the system cannot find any grade information from the previous semester for the Student, a message is displayed.",1,{decision: allow; subject: none; action: display; resource: message; purpose: none; condition: in the basic flow the system cannot find any grade information from the previous semester for the student}
96,The Student can also update or delete course selections if changes are made within the add or drop period at the beginning of the semester.,1,{decision: allow; subject: student; action: update; resource: course selection; purpose: none; condition: changes are made within the add or drop period at the beginning of the semester | decision: allow; subject: student; action: delete; resource: course selection; purpose: none; condition: changes are made within the add or drop period at the beginning of the semester}
97,This use case allows the Registrar to maintain student information in the registration system.,1,{decision: allow; subject: registrar; action: maintain; resource: student information; purpose: none; condition: none}
98,The purpose of this document is to define requirements of the Course Registration System.,0,{decision: allow; subject: none; action: define; resource: requirements of the course registration system; condition: none; purpose: none}
99,"If there is no conflict, the system updates the course offering information for each offering the professor selects (i.e., records the professor as the instructor for the course offering).",1,{decision: allow; subject: system; action: update; resource: course offering information; purpose: none; condition: there is no conflict}
100,"Due to a decrease in federal funding, the college cannot afford to replace the entire system at once.",0,{decision: allow; subject: none; action: replace; resource: entire system; condition: none; purpose: none}
101,"If the Registrar selected “Update a Student”, the Update a Student  subflow is executed.",0,{decision: allow; subject: none; action: execute; resource: update a student  subflow; purpose: none; condition: registrar selected “update a student”}
102,The system deletes the Schedule.,1,{decision: allow; subject: system; action: delete; resource: schedule; purpose: none; condition: none}
103,The system requests that the Registrar enter the professor id,1,{decision: allow; subject: registrar; action: enter; resource: professor id; purpose: none; condition: none}
104,"This use case starts when a Student wishes to register for course offerings, or to change his or her existing course schedule.",0,{decision: allow; subject: none; action: start; resource: use case; purpose: none; condition: student wishes to register for course offerings_ or to change his or her existing course schedule}
105,The system must be able to complete 80% of all transactions within 2 minutes.,0,{decision: allow; subject: system; action: complete; resource: 80% of all transactions within 2 minutes; condition: none; purpose: none}
106,The system displays each student and any grade that was previously assigned for the offering.,1,{decision: allow; subject: system; action: display; resource: student; purpose: none; condition: none | decision: allow; subject: system; action: display; resource: grade; purpose: none; condition: none}
107,Create a Schedule,0,{decision: allow; subject: none; action: create; resource: schedule; condition: none; purpose: none}
108,The system cancels the course offering for each schedule that contains it.,1,{decision: allow; subject: system; action: cancel; resource: course offering; purpose: none; condition: none}
109,The system provides the Registrar with the new student id.,1,{decision: allow; subject: system; action: provide; resource: student id; purpose: none; condition: none}
110,"The course offering is marked as ""enrolled in"" in the schedule.",0,{decision: allow; subject: none; action: mark; resource: course offering; purpose: none; condition: none}
111,The system deletes the professor from the system.,1,{decision: allow; subject: system; action: delete; resource: professor; purpose: none; condition: none}
112,Update a Professor,0,{decision: allow; subject: none; action: update; resource: professor; condition: none; purpose: none}
113,The Registrar must be logged onto the system before this use case begins.,0,{decision: allow; subject: registrar; action: log; resource: registrar; condition: none; purpose: none}
114,The system validates the entered name and password and logs the actor into the system.,0,{decision: allow; subject: system; action: validate; resource: entered name; condition: none; purpose: none | decision: allow; subject: system; action: log; resource: entered password; condition: none; purpose: none}
115,The system shall provide access to the legacy course catalog database with no more than a 10 second latency.,0,{decision: allow; subject: system; action: provide; resource: legacy course database with no more than a 10 second latency; condition: none; purpose: none}
116,This use case allows a Student to view his or her report card for the previously completed semester.,1,{decision: allow; subject: student; action: view; resource: report card; purpose: none; condition: none}
117,Maintain Student Information,0,{decision: allow; subject: maintain student information; action: maintain; resource: student information; condition: none; purpose: none}
118,The professor selects possibly and possibly de-selects the course offerings that he or she wishes to teach for the upcoming semester.,1,{decision: allow; subject: professor; action: select; resource: course offering; purpose: none; condition: none | decision: allow; subject: professor; action: de-select; resource: course offering; purpose: none; condition: none}
119,The Professor selects a course offering.,1,{decision: allow; subject: professor; action: select; resource: course offering; purpose: none; condition: none}
120,"In addition, the professors will be able to record the grades for the students in each class.",1,{decision: allow; subject: professors; action: record; resource: grade; purpose: none; condition: none}
121,All the students enrolled in a particular course offering.,0,{decision: allow; subject: none; action: enroll; resource: students enrolled in a particular course offering; condition: none; purpose: none}
122,The system requests that the Registrar enter the student id,1,{decision: allow; subject: registrar; action: enter; resource: student id; purpose: none; condition: none}
123,"If the course offerings do not have at least three students at this point (some may have been added as a result of leveling), then the system cancels the course offering.",1,{decision: allow; subject: system; action: cancel; resource: course offering; purpose: none; condition: course offerings do not have at least three students at this point (some may have been added as a result of leveling)}
124,Add a Student,0,{decision: allow; subject: none; action: add; resource: student; condition: none; purpose: none}
125,"This includes adding, modifying, and deleting professors from the system.",1,{decision: allow; subject: none; action: add; resource: professors; purpose: none; condition: none | decision: allow; subject: none; action: modify; resource: professors; purpose: none; condition: none | decision: allow; subject: none; action: delete; resource: professors; purpose: none; condition: none}
126,"The Student can either select a different course offering and the use case continues, save the schedule, as is (see Save a Schedule subflow), or cancel the operation, at which point the Basic Flow is re-started at the beginning.",1,{decision: allow; subject: student; action: select; resource: course offering; purpose: none; condition: none | decision: allow; subject: student; action: save; resource: schedule; purpose: none; condition: none | decision: allow; subject: student; action: cancel; resource: operation; purpose: none; condition: none}
127,The system retrieves a list of available course offerings from the Course Catalog System and displays the list to the Student.,1,{decision: allow; subject: system; action: retrieve; resource: list of available course offering; purpose: none; condition: none | decision: allow; subject: system; action: display; resource: list of available course offering; purpose: none; condition: none}
128,"If, in the Basic Flow, the professor is not eligible to teach any course offerings in the upcoming semester, the system will display an error message.",1,{decision: allow; subject: system; action: display; resource: error message; purpose: none; condition: in the basic flow the professor is not eligible to teach any course offerings in the upcoming semester}
129,The system requests that the Registrar enter the student information.,1,{decision: allow; subject: registrar; action: enter; resource: student information; purpose: none; condition: none}
130,A course offering with fewer than three students will be canceled.,0,{decision: allow; subject: none; action: cancel; resource: course offering with fewer than three students; condition: none; purpose: none}
131,The Student must be logged onto the system before this use case begins.,0,{decision: allow; subject: none; action: log; resource: student; condition: none; purpose: none}
132,"Once the student has made his or her selections, the system updates the schedule for the Student using the selected course offerings.",1,{decision: allow; subject: system; action: update; resource: schedule; purpose: none; condition: student has made his or her selections}
133,A class offered by the university.,0,{decision: allow; subject: none; action: offer; resource: class offering; condition: none; purpose: none}
134,Students must be able to access the system during this time to add or drop courses.,1,{decision: allow; subject: student; action: access; resource: system; purpose: add courses; condition: none | decision: allow; subject: student; action: access; resource: system; purpose: drop courses; condition: none}
135,Professors must be able to access the on-line system to indicate which courses they will be teaching.,1,{decision: allow; subject: professors; action: access; resource: on-line system; purpose: indicate which courses professors will be teaching; condition: none}
136,The system also retrieves and displays the list of courses the professor has previously selected to teach.,1,{decision: allow; subject: system; action: retrieve; resource: list of courses; purpose: none; condition: none | decision: allow; subject: system; action: display; resource: list of courses; purpose: none; condition: none}
137,The Professor must be logged onto the system before this use case begins.,0,{decision: allow; subject: professor; action: log; resource: system; condition: none; purpose: none}
138,The system provides the Registrar with the new professor id.,1,{decision: allow; subject: system; action: provide; resource: professor id; purpose: none; condition: none}
139,The Supplementary Specifications and the use-case model together capture a complete set of requirements on the system.,0,{decision: allow; subject: none; action: capture; resource: complete set of requirements; condition: none; purpose: none}
140,"If the Registrar selected “Add a Student”, the Add a Student  subflow is executed.",0,{decision: allow; subject: none; action: execute; resource: add a student subflow; purpose: none; condition: registrar selected “add a student”}
141,The system displays a list of course offerings the Professor taught in the previous semester.,1,{decision: allow; subject: system; action: display; resource: list of course offerings; purpose: none; condition: none}
142,"If the system is unable to communicate with the Course Catalog System, the system will display an error message to the Student.",1,{decision: allow; subject: system; action: display; resource: error message; purpose: none; condition: system is unable to communicate with the course catalog system}
143,The system shall provide a Windows-based desktop interface.,0,{decision: allow; subject: system; action: provide; resource: windows-based desktop interface; condition: none; purpose: none}
144,"If a professor change is needed after registration has been closed, it is handled outside the scope of this system.",0,{decision: allow; subject: none; action: handle; resource: outside the scope of this system; condition: if a professor change is needed after registration has been closed; purpose: none}
145,The system used for processing billing information.,0,{decision: allow; subject: system; action: process; resource: billing information; condition: none; purpose: none}
146,"If the Registrar selected “Delete a Professor”, the Delete a Professor subflow is executed.",0,{decision: allow; subject: none; action: execute; resource: delete a professor subflow; purpose: none; condition: registrar selected “delete a professor”}
147,The system retrieves and displays the list of course offerings the professor is eligible to teach for the current semester.,1,{decision: allow; subject: system; action: retrieve; resource: list of course offerings; purpose: none; condition: none | decision: allow; subject: system; action: display; resource: list of course offerings; purpose: none; condition: none}
148,Add a Professor,0,{decision: allow; subject: none; action: add; resource: professor; condition: none; purpose: none}
149,"This includes adding, modifying, and deleting Students from the system.",0,{decision: allow; subject: none; action: add; resource: students; purpose: none; condition: none | decision: allow; subject: none; action: modify; resource: students; purpose: none; condition: none | decision: allow; subject: none; action: delete; resource: students; purpose: none; condition: none}
150,Multiple users must be able to perform their work concurrently.,0,{decision: allow; subject: multiple users; action: perform; resource: their work concurrently; condition: none; purpose: none}
151,"If the use case was successful, the actor is now logged into the system.",0,{decision: allow; subject: none; action: log; resource: use case; condition: if the use case was successful; purpose: none}
152,The professor acknowledges the message and the use case ends.,0,{decision: allow; subject: professor; action: acknowledge; resource: message; condition: none; purpose: none}
153,They will also need to see which students signed up for their course offerings.,1,{decision: allow; subject: they; action: see; resource: student; purpose: none; condition: none}
154,The course offerings not marked as “enrolled in” are marked as “selected” in the schedule.,0,{decision: allow; subject: none; action: mark; resource: course offerings not marked as “enrolled in”; purpose: none; condition: none}
155,"If it is, then a message is displayed to the Registrar, and the use case terminates.",1,{decision: allow; subject: none; action: display; resource: message; purpose: none; condition: none | decision: allow; subject: none; action: terminate; resource: use case; purpose: none; condition: none}
156,As the head of information systems for Wylie College you are tasked with developing a new student registration system.,0,{decision: allow; subject: none; action: develop; resource: new student registration system; condition: none; purpose: none}
157,"When the use case starts, if it is determined that registration for the current semester has been closed, a message is displayed to the Student, and the use case terminates.",1,{decision: allow; subject: none; action: display; resource: message; purpose: none; condition: it is determined that registration for the current semester has been closed | decision: allow; subject: none; action: terminate; resource: use case; purpose: none; condition: it is determined that registration for the current semester has been closed}
158,"If the Student selected “update a schedule”, the Update a Schedule subflow is executed.",0,{decision: allow; subject: none; action: execute; resource: update a schedule subflow; purpose: none; condition: student selected “update a schedule”}
159,"If the Professor wishes to skip a particular student, the grade information can be left blank and filled in at a later time.",1,{decision: allow; subject: professor; action: leave; resource: grade information; purpose: none; condition: professor wishes to skip a particular student | decision: allow; subject: professor; action: fill in; resource: grade information; purpose: none; condition: professor wishes to skip a particular student}
160,"In addition, each student will indicate two alternative choices in case the student cannot be assigned to a primary selection.",1,{decision: allow; subject: student; action: indicate; resource: alternative choice; purpose: none; condition: student cannot be assigned to a primary selection}
161,"If the Registrar selected “Add a Professor”, the Add a Professor  subflow is executed.",0,{decision: allow; subject: none; action: execute; resource: add a professor subflow; purpose: none; condition: registrar selected “add a professor”}
162,"When the Student indicates that he or she is done viewing the grades, the use case terminates.",0,{decision: allow; subject: none; action: terminate; resource: use case; purpose: none; condition: student indicates that he or she is done viewing the grades}
163,"If the system is unable to communicate with the Billing System, the system will attempt to re-send the request after a specified period.",1,{decision: allow; subject: system; action: re-send; resource: request; condition: system is unable to communicate with the billing system; purpose: none}
164,"If so, the system commits the course offering for each schedule that contains it.",1,{decision: allow; subject: system; action: commit; resource: course offering; purpose: none; condition: none}
165,The Close Registration processing cannot be performed if registration is in progress.,1,{decision: deny; subject: none; action: perform; resource: close registration processing; purpose: none; condition: registration is in progress}
166,The system retrieves and displays the student information.,1,{decision: allow; subject: system; action: retrieve; resource: student information; purpose: none; condition: none | decision: allow; subject: system; action: display; resource: student information; purpose: none; condition: none}
167,Only Professors can enter grades for students.,1,{decision: allow; subject: professor; action: enter; resource: grade; purpose: none; condition: none}
168,The system calculates the tuition owed by each student for his current semester schedule and sends a transaction to the Billing System.,1,{decision: allow; subject: system; action: calculate; resource: tuition; purpose: none; condition: none | decision: allow; subject: system; action: send; resource: transaction; purpose: none; condition: none}
169,The Registrar must be logged onto the system in order for this use case to begin.,0,{decision: allow; subject: registrar; action: log; resource: system in; condition: none; purpose: in order for this use case to begin}
170,"Once the Registrar updates the necessary information, the system updates the professor record.",1,{decision: allow; subject: system; action: update; resource: professor record; purpose: none; condition: registrar updates the necessary information}
171,"At the beginning of each semester, students may request a course catalogue containing a list of course offerings for the semester.",1,{decision: allow; subject: student; action: request; resource: course catalogue; purpose: none; condition: none}
172,"This specification defines the non-functional requirements of the system; such as reliability, usability, performance, and supportability, as well as functional requirements that are common across a number of use cases.",0,{decision: allow; subject: none; action: define; resource: non-functional requirements of the system; condition: none; purpose: none}
173,Select Courses to Teach,0,{decision: allow; subject: none; action: teach; resource: courses; condition: none; purpose: none}
174,"If the use case was successful, the student information is added, updated, or deleted from the system.",1,{decision: allow; subject: none; action: add; resource: student information; purpose: none; condition: use case was successful | decision: allow; subject: none; action: update; resource: student information; purpose: none; condition: use case was successful | decision: allow; subject: none; action: delete; resource: student information; purpose: none; condition: use case was successful}
175,This use case allows the Registrar to maintain professor information in the registration system.,1,{decision: allow; subject: registrar; action: maintain; resource: professor information; purpose: none; condition: none}
176,"This Supplementary Specification applies to the Course Registration System, which will be developed by the OOAD students.",0,{decision: allow; subject: none; action: apply; resource: course registration system; condition: none; purpose: none}
177,This use case allows a Professor to select the course offerings from the course catalog for the courses that he or she is eligible for and wishes to teach in the upcoming semester.,1,{decision: allow; subject: professor; action: select; resource: course offering; purpose: none; condition: none}
178,"If, in the Delete A Professor sub-flow, the Registrar decides not to delete the professor, the delete is cancelled, and the Basic Flow is re-started at the beginning.",1,{decision: allow; subject: none; action: re-start; resource: basic flow; purpose: none; condition: in the delete a professor sub-flow_ the registrar decides not to delete the professor_ the delete is cancelled}
179,"If a course fills up during the actual registration process, the student must be notified of the change before submitting the schedule for processing.",1,{decision: allow; subject: none; action: notify; resource: student; purpose: none; condition: course fills up during the actual registration process}
180,Update a Student,0,{decision: allow; subject: none; action: update; resource: student; condition: none; purpose: none}
181,"Once the Registrar provides the requested information, one of the sub flows is executed.",0,{decision: allow; subject: none; action: execute; resource: one of the sub flows; purpose: none; condition: registrar provides the requested information}
182,The system removes the professor from teaching the de-selected course offerings.,1,{decision: allow; subject: system; action: remove; resource: professor; purpose: none; condition: none}
183,The Student selects the course offerings to add from the list of available course offerings.,1,{decision: allow; subject: student; action: select; resource: course offering; purpose: add; condition: none}
184,"The system shall integrate with an existing legacy system, the Course Catalog System, which is an RDBMS database.",0,{decision: allow; subject: system; action: integrate; resource: course catalog system; condition: none; purpose: none | decision: allow; subject: system; action: integrate; resource: legacy system; condition: none; purpose: none}
185,The Student selects 4 primary course offerings and 2 alternate course offerings from the list of available offerings.,1,{decision: allow; subject: student; action: select; resource: primary course offering; purpose: none; condition: none | decision: allow; subject: student; action: select; resource: alternate course offering; purpose: none; condition: none}
186,"If, in the Update a Professor  or Delete a Professor sub-flows, a professor with the specified id number does not exist, the system displays an error message.",1,{decision: allow; subject: system; action: display; resource: error message; purpose: none; condition: professor with the specified id number does not exist in the update a professor  or delete a professor sub-flows}
187,"The Professor can either resolve the schedule conflict (i.e., by canceling his selection to teach one of the course offerings), or cancel the operation, in which case, any selections will be lost, and the use case ends.",1,{decision: allow; subject: professor; action: resolve; resource: schedule conflict; purpose: none; condition: none | decision: allow; subject: professor; action: cancel; resource: operation; purpose: none; condition: none}
188,The schedule is saved in the system.,0,{decision: allow; subject: none; action: save; resource: schedule; purpose: none; condition: none}
189,The Registrar enters the professor id.,1,{decision: allow; subject: registrar; action: enter; resource: professor id; purpose: none; condition: none}
190,The system will continue to attempt to re-send until the Billing System becomes available.,0,{decision: allow; subject: system; action: re-send; resource: billing system; condition: none; purpose: none}
191,The system requests that the Registrar enter the professor id.,1,{decision: allow; subject: registrar; action: enter; resource: professor id; purpose: none; condition: none}
192,"If, in the Delete A Schedule sub-flow, the Student decides not to delete the schedule, the delete is cancelled, and the Basic Flow is re-started at the beginning.",0,{decision: allow; subject: none; action: cancel; resource: the delete; purpose: none; condition: in the delete a schedule sub-flow_ the student decides not to delete the schedule | decision: allow; subject: none; action: re-start; resource: basic flow; purpose: none; condition: in the delete a schedule sub-flow_ the student decides not to delete the schedule}
193,"For each selected course offering on the schedule not already marked as “enrolled in”, the system verifies that the Student has the necessary prerequisites, that the course offering is open, and that there are no schedule conflicts.",1,{decision: allow; subject: system; action: verify; resource: prerequisite; purpose: none; condition: none | decision: allow; subject: system; action: verify; resource: course offering; purpose: none; condition: none | decision: allow; subject: system; action: verify; resource: schedule conflict; purpose: none; condition: none}
194,The new system will access course information from the legacy database but will not update it.,1,{decision: allow; subject: system; action: access; resource: course information; purpose: none; condition: none | decision: deny; subject: system; action: update; resource: course information; purpose: none; condition: none}
195,The system prompts the Registrar to confirm the deletion of the professor.,1,{decision: allow; subject: registrar; action: confirm; resource: deletion of the professor; purpose: none; condition: none}
196,The Registrar enters the student id.,1,{decision: allow; subject: registrar; action: enter; resource: student id; purpose: none; condition: none}
197,The student is added to the system.,1,{decision: allow; subject: none; action: add; resource: student; purpose: none; condition: none}
198,"For each course offering, the system closes all course offerings.",1,{decision: allow; subject: system; action: close; resource: course offering; purpose: none; condition: none}
199,"If no alternates are available, then no substitution will be made.",1,{decision: allow; subject: none; action: make; resource: substitution; purpose: none; condition: no alternates are available}
